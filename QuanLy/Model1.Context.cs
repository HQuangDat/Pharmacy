//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLy
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Pharmacy_ManagementEntities : DbContext
    {
        public Pharmacy_ManagementEntities()
            : base("name=Pharmacy_ManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<Account_Category> Account_Category { get; set; }
        public virtual DbSet<Bill> Bill { get; set; }
        public virtual DbSet<Bill_Medicine> Bill_Medicine { get; set; }
        public virtual DbSet<Bill_Supplie> Bill_Supplie { get; set; }
        public virtual DbSet<Medical_Supplie> Medical_Supplie { get; set; }
        public virtual DbSet<Medicine> Medicine { get; set; }
        public virtual DbSet<Medicine_Category> Medicine_Category { get; set; }
        public virtual DbSet<Staff> Staff { get; set; }
        public virtual DbSet<Staff_Category> Staff_Category { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<Bill_Create_Result> Bill_Create(Nullable<int> bill_ID)
        {
            var bill_IDParameter = bill_ID.HasValue ?
                new ObjectParameter("Bill_ID", bill_ID) :
                new ObjectParameter("Bill_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bill_Create_Result>("Bill_Create", bill_IDParameter);
        }
    
        public virtual ObjectResult<Medical_Supplie_Statistic_Result> Medical_Supplie_Statistic(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Medical_Supplie_Statistic_Result>("Medical_Supplie_Statistic", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Medicine_Statistic_Result> Medicine_Statistic(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Medicine_Statistic_Result>("Medicine_Statistic", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Statistic_Bills_Result> Statistic_Bills(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistic_Bills_Result>("Statistic_Bills", fromDateParameter, toDateParameter);
        }
    }
}
